const TelegramBot = require('node-telegram-bot-api');
const outlineService = require('./outlineService');

class TelegramService {
    constructor() {
        this.bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });
        this.adminChatId = process.env.ADMIN_CHAT_ID;
        this.setupCommands();
    }

    setupCommands() {
        // –ö–æ–º–∞–Ω–¥–∞ start –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        this.bot.onText(/\/start/, async (msg) => {
            const chatId = msg.chat.id;
            
            const keyboard = {
                inline_keyboard: [
                    [{ text: 'üí´ –ö—É–ø–∏—Ç—å ZeusVPN - 100‚ÇΩ/–º–µ—Å—è—Ü', callback_data: 'buy_vpn' }],
                    [{ text: 'üìó –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ', callback_data: 'installation_guide' }],
                    [{ text: 'üóÇ –ú–æ–∏ –∫–ª—é—á–∏', callback_data: 'mykeys' }]
                ]
            };
            
            await this.bot.sendMessage(chatId, 
                '‚ö°Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ZeusVPN!\n\n' +
                'üåü –ß—Ç–æ —É–º–µ–µ—Ç –Ω–∞—à VPN:\n' +
                'üöÄ –ë—ã—Å—Ç—Ä—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π VPN-–¥–æ—Å—Ç—É–ø\n' +
                'üì± –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö\n' +
                '‚ôæ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫\n' +
                '‚ö°Ô∏è –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n\n' +
                'üíé –°—Ç–æ–∏–º–æ—Å—Ç—å: –≤—Å–µ–≥–æ 100‚ÇΩ –≤ –º–µ—Å—è—Ü\n\n' +
                'üåø –ù–∞–∂–º–∏—Ç–µ "–ö—É–ø–∏—Ç—å ZeusVPN" –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏',
                { reply_markup: keyboard }
            );
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
        this.bot.on('callback_query', async (query) => {
            const chatId = query.message.chat.id;
            
            switch(query.data) {
                case 'android':
                    await this.sendInstructions(chatId, 'android');
                    break;
                case 'ios':
                    await this.sendInstructions(chatId, 'ios');
                    break;
                case 'windows':
                    await this.sendInstructions(chatId, 'windows');
                    break;
                case 'linux':
                    await this.sendInstructions(chatId, 'linux');
                    break;
                case 'macos':
                    await this.sendInstructions(chatId, 'macos');
                    break;
                case 'getkey':
                    await this.handleGetKey(chatId);
                    break;
                case 'mykeys':
                    await this.handleMyKeys(chatId);
                    break;
                case 'payment':
                    await this.handlePayment(chatId);
                    break;
                case 'check_payment':
                    await this.checkPayment(chatId, query.message.message_id);
                    break;
                case 'buy_vpn':
                    await this.showPaymentOptions(chatId);
                    break;
                case 'installation_guide':
                    const guideKeyboard = {
                        inline_keyboard: [
                            [{ text: 'üì± Android', callback_data: 'android' }],
                            [{ text: 'üçé iOS/iPhone', callback_data: 'ios' }],
                            [{ text: 'ü™ü Windows', callback_data: 'windows' }],
                            [{ text: 'üêß Linux', callback_data: 'linux' }],
                            [{ text: 'üçè macOS', callback_data: 'macos' }],
                            [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back' }]
                        ]
                    };
                    
                    await this.bot.editMessageText(
                        'üìñ –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:',
                        {
                            chat_id: chatId,
                            message_id: query.message.message_id,
                            reply_markup: guideKeyboard
                        }
                    );
                    break;
                case 'back':
                    const mainKeyboard = {
                        inline_keyboard: [
                            [{ text: 'üí´ –ö—É–ø–∏—Ç—å ZeusVPN - 100‚ÇΩ/–º–µ—Å—è—Ü', callback_data: 'buy_vpn' }],
                            [{ text: 'üìó –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ', callback_data: 'installation_guide' }],
                            [{ text: 'üóÇ –ú–æ–∏ –∫–ª—é—á–∏', callback_data: 'mykeys' }]
                        ]
                    };
                    
                    await this.bot.editMessageText(
                        '‚ö°Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ZeusVPN!\n\n' +
                        'üåü –ß—Ç–æ —É–º–µ–µ—Ç –Ω–∞—à VPN:\n' +
                        'üöÄ –ë—ã—Å—Ç—Ä—ã–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π VPN-–¥–æ—Å—Ç—É–ø\n' +
                        'üì± –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö\n' +
                        '‚ôæ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫\n' +
                        '‚ö°Ô∏è –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n\n' +
                        'üíé –°—Ç–æ–∏–º–æ—Å—Ç—å: –≤—Å–µ–≥–æ 100‚ÇΩ –≤ –º–µ—Å—è—Ü\n\n' +
                        'üåø –ù–∞–∂–º–∏—Ç–µ "–ö—É–ø–∏—Ç—å ZeusVPN" –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏',
                        {
                            chat_id: chatId,
                            message_id: query.message.message_id,
                            reply_markup: mainKeyboard
                        }
                    );
                    break;
            }
            
            await this.bot.answerCallbackQuery(query.id);
        });

        // –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        this.bot.onText(/\/admin/, async (msg) => {
            const chatId = msg.chat.id;
            if (chatId.toString() !== this.adminChatId) {
                await this.bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            await this.bot.sendMessage(chatId,
                '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n' +
                '/allkeys - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∫–ª—é—á–∏\n' +
                '/deletekey <id> - –£–¥–∞–ª–∏—Ç—å –∫–ª—é—á\n' +
                '/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è'
            );
        });
    }

    async sendInstructions(chatId, platform) {
        const instructions = {
            android: {
                title: 'üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android:',
                text: '1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline:\n' +
                      'https://play.google.com/store/apps/details?id=org.outline.android.client\n\n' +
                      '2. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á" –Ω–∏–∂–µ\n' +
                      '3. –°–∫–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á\n' +
                      '4. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á\n' +
                      '5. –ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"'
            },
            ios: {
                title: 'üçé –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è iOS:',
                text: '1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline –∏–∑ App Store:\n' +
                      'https://apps.apple.com/app/outline-app/id1356177741\n\n' +
                      '2. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á" –Ω–∏–∂–µ\n' +
                      '3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á\n' +
                      '4. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á\n' +
                      '5. –†–∞–∑—Ä–µ—à–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É VPN-–ø—Ä–æ—Ñ–∏–ª—è'
            },
            windows: {
                title: 'ü™ü –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Windows:',
                text: '1. –°–∫–∞—á–∞–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ Outline:\n' +
                      'https://raw.githubusercontent.com/Jigsaw-Code/outline-releases/master/client/stable/Outline-Client.exe\n\n' +
                      '2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n' +
                      '3. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á" –Ω–∏–∂–µ\n' +
                      '4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á\n' +
                      '5. –û—Ç–∫—Ä–æ–π—Ç–µ Outline –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á\n' +
                      '6. –ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"'
            },
            linux: {
                title: 'üêß –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Linux:',
                text: '1. –°–∫–∞—á–∞–π—Ç–µ AppImage:\n' +
                      'https://raw.githubusercontent.com/Jigsaw-Code/outline-releases/master/client/stable/Outline-Client.AppImage\n\n' +
                      '2. –°–¥–µ–ª–∞–π—Ç–µ —Ñ–∞–π–ª –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º:\n' +
                      'chmod +x Outline-Client.AppImage\n\n' +
                      '3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n' +
                      '4. –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á" –Ω–∏–∂–µ\n' +
                      '5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á\n' +
                      '6. –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
            },
            macos: {
                title: 'üçè –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è macOS:',
                text: '1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline:\n' +
                      'https://itunes.apple.com/app/outline-app/id1356178125\n\n' +
                      '2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n' +
                      '3. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á" –Ω–∏–∂–µ\n' +
                      '4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á\n' +
                      '5. –û—Ç–∫—Ä–æ–π—Ç–µ Outline –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á\n' +
                      '6. –†–∞–∑—Ä–µ—à–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É VPN-–ø—Ä–æ—Ñ–∏–ª—è'
            }
        };

        const info = instructions[platform];
        const keyboard = {
            inline_keyboard: [
                [{ text: 'üîë –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á', callback_data: 'getkey' }],
                [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back' }]
            ]
        };

        await this.bot.sendMessage(chatId, 
            `${info.title}\n\n${info.text}`,
            { 
                reply_markup: keyboard,
                parse_mode: 'HTML',
                disable_web_page_preview: false
            }
        );
    }

    async handleGetKey(chatId) {
        try {
            const key = await outlineService.createKey(`user_${chatId}`);
            await this.bot.sendMessage(chatId,
                'üåü –í–∞—à –∫–ª—é—á ZeusVPN –≥–æ—Ç–æ–≤!\n\n' +
                'üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline:\n\n' +
                `<code>${key.accessUrl}</code>`,
                { 
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: [[
                            { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º', callback_data: 'back' }
                        ]]
                    }
                }
            );
        } catch (error) {
            console.error('Error creating key:', error);
            await this.bot.sendMessage(chatId, 
                '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª—é—á–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            );
        }
    }

    async handleMyKeys(chatId) {
        try {
            const allKeys = await outlineService.getAllKeys();
            const userKeys = allKeys.accessKeys.filter(key => key.name === `user_${chatId}`);
            
            if (userKeys.length === 0) {
                await this.bot.sendMessage(chatId, 
                    'üåø –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª—é—á–µ–π.\n' +
                    'üí´ –ù–∞–∂–º–∏—Ç–µ "–ö—É–ø–∏—Ç—å ZeusVPN", —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.',
                    {
                        reply_markup: {
                            inline_keyboard: [[
                                { text: 'üí´ –ö—É–ø–∏—Ç—å ZeusVPN', callback_data: 'buy_vpn' }
                            ]]
                        }
                    }
                );
                return;
            }

            let message = 'üóÇ –í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏ ZeusVPN:\n\n';
            userKeys.forEach((key, index) => {
                message += `${index + 1}. ID: ${key.id}\n`;
                message += `<code>${key.accessUrl}</code>\n\n`;
            });

            await this.bot.sendMessage(chatId, message, {
                parse_mode: 'HTML',
                reply_markup: {
                    inline_keyboard: [[
                        { text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back' }
                    ]]
                }
            });
        } catch (error) {
            console.error('Error getting keys:', error);
            await this.bot.sendMessage(chatId, 
                '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–ª—é—á–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            );
        }
    }

    async handlePayment(chatId) {
        const paymentMessage = 
            'üí≥ –û–ø–ª–∞—Ç–∞ VPN –Ω–∞ 1 –º–µ—Å—è—Ü\n\n' +
            'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: 100‚ÇΩ\n\n' +
            'üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ:\n' +
            '1. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ 100‚ÇΩ –Ω–∞ –∫–∞—Ä—Ç—É:\n' +
            '   2202 2024 3494 4403 (–°–±–µ—Ä–±–∞–Ω–∫)\n\n' +
            '2. –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–µ—Ä–µ–≤–æ–¥—É —É–∫–∞–∂–∏—Ç–µ –≤–∞—à ID:\n' +
            `   <code>${chatId}</code>\n\n` +
            '3. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É"\n\n' +
            '‚ùóÔ∏è –í–∞–∂–Ω–æ: –ø–µ—Ä–µ–≤–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–º–µ–Ω–Ω–æ –Ω–∞ 100‚ÇΩ –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤–∞—à ID –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏';

        const keyboard = {
            inline_keyboard: [
                [{ text: '‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', callback_data: 'check_payment' }],
                [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥', callback_data: 'back' }]
            ]
        };

        await this.bot.sendMessage(chatId, paymentMessage, {
            parse_mode: 'HTML',
            reply_markup: keyboard
        });
    }

    async checkPayment(chatId, messageId) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ API –±–∞–Ω–∫–∞
        // –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –∫–ª—é—á
        try {
            const key = await outlineService.createKey(`paid_user_${chatId}`);
            
            const successMessage = 
                '‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞!\n\n' +
                'üîë –í–∞—à VPN –∫–ª—é—á:\n' +
                `<code>${key.accessUrl}</code>\n\n` +
                'üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á\n' +
                '‚è∞ –ö–ª—é—á –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 30 –¥–Ω–µ–π\n' +
                '‚ùóÔ∏è –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–ª—é—á, –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è';

            await this.bot.editMessageText(successMessage, {
                chat_id: chatId,
                message_id: messageId,
                parse_mode: 'HTML',
                reply_markup: {
                    inline_keyboard: [[
                        { text: '‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data: 'back' }
                    ]]
                }
            });
        } catch (error) {
            console.error('Error in payment processing:', error);
            
            const errorMessage = 
                '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–ø–ª–∞—Ç—ã\n\n' +
                '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
                '‚Ä¢ –ü–ª–∞—Ç–µ–∂ –µ—â–µ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª\n' +
                '‚Ä¢ –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω ID\n' +
                '‚Ä¢ –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞\n\n' +
                '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π';

            await this.bot.editMessageText(errorMessage, {
                chat_id: chatId,
                message_id: messageId,
                reply_markup: {
                    inline_keyboard: [[
                        { text: 'üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞', callback_data: 'check_payment' }
                    ]]
                }
            });
        }
    }

    async showPaymentOptions(chatId) {
        const paymentMessage = 
            'üí´ –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ ZeusVPN\n\n' +
            'üéÅ –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ –ø–æ–¥–ø–∏—Å–∫—É:\n' +
            'üöÄ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫\n' +
            '‚ö°Ô∏è –í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n' +
            'üì± –î–æ—Å—Ç—É–ø —Å–æ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n' +
            'üõ° –ù–∞–¥–µ–∂–Ω–∞—è –∑–∞—â–∏—Ç–∞\n' +
            'üåø –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n' +
            'üíé –°—Ç–æ–∏–º–æ—Å—Ç—å: 100‚ÇΩ/–º–µ—Å—è—Ü\n\n' +
            'üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:\n' +
            '‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞\n' +
            '‚Ä¢ –°–ë–ü\n' +
            '‚Ä¢ –ÆMoney';

        const keyboard = {
            inline_keyboard: [
                [{ text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π', url: `https://www.donationalerts.com/r/your_payment_link` }],
                [{ text: 'üè¶ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –°–ë–ü', callback_data: 'sbp_payment' }],
                [{ text: 'üí∞ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –ÆMoney', url: 'https://yoomoney.ru/to/your_wallet' }],
                [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back' }]
            ]
        };

        await this.bot.sendMessage(chatId, paymentMessage, {
            parse_mode: 'HTML',
            reply_markup: keyboard
        });
    }

    async handleSbpPayment(chatId) {
        const sbpMessage = 
            'üè¶ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –°–ë–ü\n\n' +
            '1Ô∏è‚É£ –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –°–ë–ü"\n' +
            '2Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É 100‚ÇΩ\n' +
            '3Ô∏è‚É£ –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à ID:\n' +
            `<code>${chatId}</code>\n\n` +
            '‚ùóÔ∏è –í–∞–∂–Ω–æ: –ø–ª–∞—Ç–µ–∂ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–æ–≤–Ω–æ –Ω–∞ 100‚ÇΩ';

        const keyboard = {
            inline_keyboard: [
                [{ text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –°–ë–ü', url: 'https://qr.nspk.ru/your_sbp_link' }],
                [{ text: '‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª', callback_data: 'check_payment' }],
                [{ text: '‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–æ—Å–æ–±–∞–º –æ–ø–ª–∞—Ç—ã', callback_data: 'buy_vpn' }]
            ]
        };

        await this.bot.sendMessage(chatId, sbpMessage, {
            parse_mode: 'HTML',
            reply_markup: keyboard
        });
    }
}

module.exports = new TelegramService(); 